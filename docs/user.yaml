paths:
# get user
  /api/v1/user/getUser:
    get:
      summary: Get user Details
      description: Fetches user Details by user ID and JWT
      tags:
        - Users
      parameters:
        - in: query
          name: userID
          required: true
          schema: 
            type: String
            example: "609dcd72699a1f02b8c9f0d7"
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: boolean
                    example: true
                  message:
                    type: String
                    example: User Found Successfully
                  user:
                    type: object
                    properties:
                      username:
                        type: String
                        example: JohnDoe
                      email:
                        type: String
                        formatL: email
                        example: johndoe@example.com
                      address:
                        type: String
                        example: 123 Main St
                      phone:
                        type: String
                        example: "123-456-78990"
                '404':
                  description: User not found
                '500':
                  description: Error in Fetching User

# update user 
  /api/v1/user/updateUser:
    put:
      summary: Update user Details
      description: Updates user Details like username, address and phone
      tags:
        -Users
      requestbody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: String
                  example: "609dcd72699a1f02b8c9f0d7"
                username:
                  type: String
                  example: JohnDoe
                address:
                  type: String
                  example: 123 Main St
                phone:
                  type: String
                  example: "123-456-78990"
        responses:
          '200':
            description: User updated successfully
          '404':
            description: User not found
          '500':
            description: Error in Updating User

# Update User Password
  /api/v1/user/updatePassword:
    put:
      summary: Update User Password
      description: Update user's password by validating the old password and setting a new password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: String
                  example: "609dcd72699a1f02b8c9f0d7"
                oldPassword:
                  type: String
                  example: "password"
                newPassword:
                  type: String
                  example: "newpassword"
          responses:
            '200': 
              description: Password Update Successfully
            '404':
              description: User not found
            '400':
              description: Please provide both old and new passwords
            '500':
              description: Error in Updating Password
            '402':
              descroption: Incorrect old password
