paths:
  /api/v1/user/getUser:
    get:
      summary: Get user information
      description: Fetches user details by user ID.
      title: users
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
            example: "609dcd72699a1f02b8c9f0d7"
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User found successfully
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                        example: johndoe
                      email:
                        type: string
                        example: johndoe@example.com
                      address:
                        type: string
                        example: "123 Main St"
                      phone:
                        type: string
                        example: "123-456-7890"
        '404':
          description: User not found
        '500':
          description: Error occurred

  /api/v1/user/updateUser:
    put:
      summary: Update user details
      description: Updates user information like username, address, and phone.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "609dcd72699a1f02b8c9f0d7"
                username:
                  type: string
                  example: johndoe_updated
                address:
                  type: string
                  example: "456 Elm St"
                phone:
                  type: string
                  example: "987-654-3210"
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found
        '500':
          description: Error in updating user

  /api/v1/user/update-password:
    put:
      summary: Update user password
      description: Updates the user's password by validating the old password and setting a new password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "609dcd72699a1f02b8c9f0d7"
                oldPassword:
                  type: string
                  format: password
                  example: "OldPassword123"
                newPassword:
                  type: string
                  format: password
                  example: "NewPassword123"
      responses:
        '200':
          description: Password updated successfully
        '400':
          description: Validation error or incorrect old password
        '404':
          description: User not found
        '500':
          description: Error in password update
